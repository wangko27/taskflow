<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
       default-lazy-init="true">

    <description>SpringSecurity安全配置</description>

    <!-- http安全配置 -->
    <s:http auto-config="true" use-expressions="true">
        <s:intercept-url pattern="/css/**" filters="none"/>
        <s:intercept-url pattern="/img/**" filters="none"/>
        <s:intercept-url pattern="/js/**" filters="none"/>

        <s:intercept-url pattern="/organization/organization!save*" access="hasAnyRole('ROLE_修改机构管理')"/>
        <s:intercept-url pattern="/organization/organization!delete*" access="hasAnyRole('ROLE_修改机构管理')"/>
        <s:intercept-url pattern="/organization/employee!save*" access="hasAnyRole('ROLE_修改机构管理')"/>
        <s:intercept-url pattern="/organization/employee!delete*" access="hasAnyRole('ROLE_修改机构管理')"/>
        <s:intercept-url pattern="/organization/*" access="hasAnyRole('ROLE_浏览机构管理')"/>
        <s:intercept-url pattern="/account/user!save*" access="hasAnyRole('ROLE_修改账号管理')"/>
        <s:intercept-url pattern="/account/user!delete*" access="hasAnyRole('ROLE_修改账号管理')"/>
        <s:intercept-url pattern="/account/*" access="hasAnyRole('ROLE_浏览账号管理')"/>
        <s:intercept-url pattern="/task/*" access="hasAnyRole('ROLE_浏览任务管理')"/>

        <s:form-login login-page="/login" default-target-url="/" authentication-failure-url="/login.action?error=1"/>
        <s:logout invalidate-session="true" logout-success-url="/"/>
        <s:session-management>
            <s:concurrency-control max-sessions="1" expired-url="/login.action?error=3"/>
        </s:session-management>

        <s:custom-filter after="SECURITY_CONTEXT_FILTER" ref="autoLoginFilter"/>
    </s:http>

    <!-- 方法安全配置 -->
	<s:global-method-security secured-annotations="enabled" />

    <!-- 认证配置, 使用userDetailsService提供的用户信息 -->
    <s:authentication-manager alias="authenticationManager">
        <s:authentication-provider user-service-ref="userDetailsService">
            <s:password-encoder hash="plaintext"/>
        </s:authentication-provider>
    </s:authentication-manager>

    <!-- 项目实现的用户查询服务 -->
    <bean id="userDetailsService" class="org.blue.taskflow.service.account.UserDetailsServiceImpl"/>

    <!-- 开发时自动登录的filter -->
    <bean id="autoLoginFilter" class="org.blue.taskflow.rest.security.AutoLoginFilter">
        <property name="enabled" value="${security.autologin.enabled}"/>
        <property name="defaultUserName" value="admin"/>
    </bean>

    <!--JCaptcha验证码服务 -->
    <bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
        <property name="captchaEngine">
            <bean class="org.springside.modules.security.jcaptcha.GMailEngine"/>
        </property>
        <!--
          默认生成的图片180秒过期 , 可另行设置
          <property name="minGuarantedStorageDelayInSeconds" value="180" />
          -->
    </bean>
</beans>